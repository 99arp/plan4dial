{
    "name": "extended_ijcai",
    "context_variables": {
        "request_emergency_help": {
            "type": "flag",
            "config": false,
            "known": {
                "type": "fflag",
                "init": false
            }
        },
        "request_electric_fire_help": {
            "type": "flag",
            "config": false
        },
        "request_engine_fire_help": {
            "type": "flag",
            "config": false
        },
        "request_wing_fire_help": {
            "type": "flag",
            "config": false,
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "got_instruction": {
            "type": "flag",
            "config": false
        },
        "got_status": {
            "type": "flag",
            "config": false
        },
        "got_instruction_engine_fire": {
            "type": "flag",
            "config": false
        },
        "got_instruction_electric_fire": {
            "type": "flag",
            "config": false
        },
        "informed": {
            "type": "flag",
            "config": false
        },
        "need_further_help": {
            "type": "flag",
            "config": false
        },
        "not_feeling_well": {
            "type": "flag",
            "config": false
        },
        "got_from_server": {
            "type": "flag",
            "config": false
        },
        "server_status": {
            "type": "flag",
            "config": false,
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "sub_dialog_reset": {
            "type": "flag",
            "config": false
        },
        "second_flag": {
            "type": "flag",
            "config": false
        },
        "fire_color": {
            "type": "enum",
            "config": [
                "red",
                "orange"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "instrument": {
            "type": "enum",
            "config": [
                "screen",
                "wiring"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "fire_type": {
            "type": "enum",
            "config": [
                "engine",
                "electric",
                "none"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "instructions_type": {
            "type": "enum",
            "config": [
                "electric",
                "engine"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "dummy_code": {
            "type": "enum",
            "config": [
                300,
                400,
                500
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "ctx_two": {
            "type": "flag",
            "config": false
        },
        "ctx_three": {
            "type": "flag",
            "config": false,
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "server_error": {
            "type": "flag",
            "config": false,
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "goal": {
            "type": "flag",
            "config": false,
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "force-statement": {
            "type": "flag",
            "config": false
        },
        "forcing__get-restart_conversation": {
            "type": "flag",
            "config": false
        },
        "fire_type-value-engine": {
            "type": "flag",
            "config": false
        },
        "fire_type-value-electric": {
            "type": "flag",
            "config": false
        },
        "fire_type-value-none": {
            "type": "flag",
            "config": false
        }
    },
    "intents": {
        "confirm": {
            "entities": [],
            "utterances": [
                "yes",
                "yeah",
                "yup",
                "affirmative",
                "aye"
            ],
            "type": "regular"
        },
        "deny": {
            "entities": [],
            "utterances": [
                "no",
                "nah",
                "negative",
                "not at all",
                "not really"
            ],
            "type": "regular"
        },
        "share-call_for_help": {
            "entities": [],
            "utterances": [
                "I have a problem",
                "I need help",
                "Can you help me?"
            ],
            "type": "regular"
        },
        "share-engine_fire_emergency": {
            "entities": [],
            "utterances": [
                "I see smokes coming out of my engine",
                "My engine is burning",
                "I see fire coming from my engine",
                "I think my engine has caught fire",
                "My engine is on fire"
            ],
            "type": "regular"
        },
        "share-electric_fire_emergency": {
            "entities": [],
            "utterances": [
                "I detect the scent of an electrical fire nearby.",
                "There's a distinct odor of electrical fire in the air.",
                "My nostrils catch the whiff of an electric fire.",
                "There's a pungent aroma signaling an electric fire.",
                "The air carries the unmistakable scent of an electrical fire.",
                "I'm picking up on the scent of something akin to an electric fire.",
                "There's a lingering smell suggesting the presence of an electrical fire.",
                "The olfactory sensation hints at the onset of an electric fire.",
                "I'm sensing the distinct odor of electrical components burning.",
                "The scent in the room bears a resemblance to that of an electric fire."
            ],
            "type": "regular"
        },
        "share-fire_color": {
            "entities": [
                "$fire_color"
            ],
            "utterances": [
                "The hue I perceive matches $fire_color.",
                "My sight captures the shade represented by $fire_color.",
                "The tint I observe resembles $fire_color.",
                "What meets my eyes mirrors $fire_color.",
                "The pigment evident to me reflects $fire_color.",
                "I discern a hue akin to $fire_color.",
                "The color evident in my vision aligns with $fire_color.",
                "What I perceive resembles the hue $fire_color.",
                "My observation identifies the color as $fire_color.",
                "The tone apparent to me resonates with $fire_color."
            ],
            "type": "regular"
        },
        "share-instrument": {
            "entities": [
                "$instrument"
            ],
            "utterances": [
                "My suspicion leans towards the $instrument.",
                "I believe the $instrument is the culprit.",
                "I reckon it's the $instrument at fault.",
                "My intuition points towards the $instrument.",
                "I suspect the $instrument is involved.",
                "I have a feeling that the $instrument is to blame.",
                "It seems likely that the $instrument is responsible.",
                "The $instrument appears to be the source.",
                "Signs suggest that the $instrument is involved.",
                "It looks like the $instrument is causing the issue"
            ],
            "type": "regular"
        },
        "fallback": {
            "entities": [],
            "utterances": [],
            "type": "fallback"
        },
        "utter_msg": {
            "entities": [],
            "utterances": [],
            "type": "regular"
        }
    },
    "actions": {
        "get-initial_help_request": {
            "type": "dialogue",
            "subtype": "resetable",
            "message_variants": [
                "What can I help you with today?"
            ],
            "condition": [
                [
                    "request_emergency_help",
                    "Unknown"
                ],
                [
                    "request_emergency_help",
                    false
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-initial_help_request__set-emergency_help_type",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "request_emergency_help": {
                                "value": true,
                                "variable": "request_emergency_help",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-call_for_help",
                        "name": "get-initial_help_request_DETDUP_get-initial_help_request__set-emergency_help_type-EQ-update-generic_fire_emergency",
                        "assignments": {
                            "$request_emergency_help": "found"
                        }
                    },
                    {
                        "updates": {
                            "sub_dialog_reset": {
                                "value": true,
                                "variable": "sub_dialog_reset",
                                "interpretation": "json"
                            },
                            "forcing__get-restart_conversation": {
                                "value": true,
                                "variable": "forcing__get-restart_conversation",
                                "interpretation": "json"
                            }
                        },
                        "follow_up": "get-restart_conversation",
                        "name": "get-initial_help_request_DETDUP_get-initial_help_request__set-emergency_help_type-EQ-update-reset",
                        "intent": null,
                        "assignments": {}
                    },
                    {
                        "updates": {
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-initial_help_request_DETDUP_get-initial_help_request__set-emergency_help_type-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-call_for_help": {
                    "entities": [],
                    "utterances": [
                        "I have a problem",
                        "I need help",
                        "Can you help me?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-restart_conversation": {
            "type": "dialogue",
            "message_variants": [
                "Restart the conversation?"
            ],
            "condition": [
                [
                    "sub_dialog_reset",
                    true
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-restart_conversation__set-second_flag",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "second_flag": {
                                "value": true,
                                "variable": "second_flag",
                                "interpretation": "json"
                            },
                            "forcing__get-restart_conversation": {
                                "value": false,
                                "variable": "forcing__get-restart_conversation",
                                "interpretation": "json"
                            }
                        },
                        "intent": "confirm",
                        "name": "get-restart_conversation_DETDUP_get-restart_conversation__set-second_flag-EQ-update-second_flag",
                        "assignments": {}
                    },
                    {
                        "updates": {
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            },
                            "forcing__get-restart_conversation": {
                                "value": false,
                                "variable": "forcing__get-restart_conversation",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-restart_conversation_DETDUP_get-restart_conversation__set-second_flag-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "confirm": {
                    "entities": [],
                    "utterances": [
                        "yes",
                        "yeah",
                        "yup",
                        "affirmative",
                        "aye"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-fire_type": {
            "type": "dialogue",
            "subtype": "resetable",
            "message_variants": [
                "I am here to assist you. Please provide me with further information."
            ],
            "condition": [
                [
                    "request_emergency_help",
                    "Known"
                ],
                [
                    "request_emergency_help",
                    true
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-fire_type__set-engine_fire_emergency",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "fire_type": {
                                "value": "engine",
                                "variable": "fire_type",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "fire_type-value-engine": {
                                "value": true,
                                "variable": "fire_type-value-engine",
                                "interpretation": "json"
                            },
                            "fire_type-value-electric": {
                                "value": false,
                                "variable": "fire_type-value-electric",
                                "interpretation": "json"
                            },
                            "fire_type-value-none": {
                                "value": false,
                                "variable": "fire_type-value-none",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-engine_fire_emergency",
                        "name": "get-fire_type_DETDUP_get-fire_type__set-engine_fire_emergency-EQ-update-engine_fire_emergency",
                        "assignments": {
                            "$fire_type": "found"
                        }
                    },
                    {
                        "updates": {
                            "fire_type": {
                                "value": "electric",
                                "variable": "fire_type",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "fire_type-value-engine": {
                                "value": false,
                                "variable": "fire_type-value-engine",
                                "interpretation": "json"
                            },
                            "fire_type-value-electric": {
                                "value": true,
                                "variable": "fire_type-value-electric",
                                "interpretation": "json"
                            },
                            "fire_type-value-none": {
                                "value": false,
                                "variable": "fire_type-value-none",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-electric_fire_emergency",
                        "name": "get-fire_type_DETDUP_get-fire_type__set-engine_fire_emergency-EQ-update-electric_fire_emergency",
                        "assignments": {
                            "$fire_type": "found"
                        }
                    },
                    {
                        "updates": {
                            "sub_dialog_reset": {
                                "value": true,
                                "variable": "sub_dialog_reset",
                                "interpretation": "json"
                            }
                        },
                        "name": "get-fire_type_DETDUP_get-fire_type__set-engine_fire_emergency-EQ-update-reset",
                        "intent": null,
                        "assignments": {}
                    },
                    {
                        "updates": {
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-fire_type_DETDUP_get-fire_type__set-engine_fire_emergency-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-engine_fire_emergency": {
                    "entities": [],
                    "utterances": [
                        "I see smokes coming out of my engine",
                        "My engine is burning",
                        "I see fire coming from my engine",
                        "I think my engine has caught fire",
                        "My engine is on fire"
                    ],
                    "type": "regular"
                },
                "share-electric_fire_emergency": {
                    "entities": [],
                    "utterances": [
                        "I detect the scent of an electrical fire nearby.",
                        "There's a distinct odor of electrical fire in the air.",
                        "My nostrils catch the whiff of an electric fire.",
                        "There's a pungent aroma signaling an electric fire.",
                        "The air carries the unmistakable scent of an electrical fire.",
                        "I'm picking up on the scent of something akin to an electric fire.",
                        "There's a lingering smell suggesting the presence of an electrical fire.",
                        "The olfactory sensation hints at the onset of an electric fire.",
                        "I'm sensing the distinct odor of electrical components burning.",
                        "The scent in the room bears a resemblance to that of an electric fire."
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "intermediate-context": {
            "type": "system",
            "subtype": "Context dependent determination",
            "condition": [
                [
                    "fire_type",
                    "Known"
                ],
                [
                    "ctx_two",
                    false
                ],
                [
                    "request_electric_fire_help",
                    false
                ],
                [
                    "request_engine_fire_help",
                    false
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "intermediate-context__set-complete",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "request_engine_fire_help": {
                                "value": true,
                                "variable": "request_engine_fire_help",
                                "interpretation": "json"
                            },
                            "ctx_two": {
                                "value": true,
                                "variable": "ctx_two",
                                "interpretation": "json"
                            }
                        },
                        "context": {
                            "fire_type": {
                                "value": "engine"
                            }
                        },
                        "name": "intermediate-context_DETDUP_intermediate-context__set-complete-EQ-update-context_two",
                        "intent": null,
                        "assignments": {}
                    },
                    {
                        "updates": {
                            "request_electric_fire_help": {
                                "value": true,
                                "variable": "request_electric_fire_help",
                                "interpretation": "json"
                            },
                            "ctx_two": {
                                "value": true,
                                "variable": "ctx_two",
                                "interpretation": "json"
                            }
                        },
                        "context": {
                            "fire_type": {
                                "value": "electric"
                            }
                        },
                        "name": "intermediate-context_DETDUP_intermediate-context__set-complete-EQ-update-context_one",
                        "intent": null,
                        "assignments": {}
                    }
                ]
            }
        },
        "update-after_slot_fill_engine_fire": {
            "type": "system",
            "condition": [
                [
                    "fire_color",
                    "Known"
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "update-after_slot_fill_engine_fire__update",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "ctx_three": {
                                "value": true,
                                "variable": "ctx_three",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "fire_type": {
                                "value": "engine",
                                "variable": "fire_type",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "fire_type-value-engine": {
                                "value": true,
                                "variable": "fire_type-value-engine",
                                "interpretation": "json"
                            },
                            "fire_type-value-electric": {
                                "value": false,
                                "variable": "fire_type-value-electric",
                                "interpretation": "json"
                            },
                            "fire_type-value-none": {
                                "value": false,
                                "variable": "fire_type-value-none",
                                "interpretation": "json"
                            }
                        },
                        "name": "update-after_slot_fill_engine_fire_DETDUP_update-after_slot_fill_engine_fire__update-EQ-update",
                        "intent": null,
                        "assignments": {
                            "$ctx_three": "found",
                            "$fire_type": "found"
                        }
                    }
                ]
            }
        },
        "get-engine_fire_instruction": {
            "type": "web_plan",
            "call": {
                "endpoint": "http://127.0.0.1:9000/create_plan",
                "default_payload": {
                    "id": 1,
                    "domain_file": "/home/qnc/upf-hierarchical/domain/domainfile.hddl",
                    "problem_file": "/home/qnc/upf-hierarchical/problem/wing_fire.hddl"
                }
            },
            "message_variants": [
                "Do I even need this?"
            ],
            "condition": [
                [
                    "ctx_three",
                    "Known"
                ],
                [
                    "ctx_three",
                    true
                ],
                [
                    "fire_type",
                    "Known"
                ],
                [
                    "got_instruction_engine_fire",
                    false
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ],
                [
                    "fire_type-value-engine",
                    true
                ]
            ],
            "effect": {
                "global-outcome-name": "get-engine_fire_instruction__set-get-engine_fire_instruction",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "server_status": {
                                "value": true,
                                "variable": "server_status",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "got_instruction_engine_fire": {
                                "value": true,
                                "variable": "got_instruction_engine_fire",
                                "interpretation": "json"
                            }
                        },
                        "name": "get-engine_fire_instruction_DETDUP_get-engine_fire_instruction__set-get-engine_fire_instruction-EQ-update-got_engine_fire_instruction",
                        "intent": null,
                        "assignments": {
                            "$server_status": "found"
                        }
                    },
                    {
                        "updates": {
                            "server_status": {
                                "value": true,
                                "variable": "server_status",
                                "certainty": "Unknown",
                                "interpretation": "json"
                            }
                        },
                        "name": "get-engine_fire_instruction_DETDUP_get-engine_fire_instruction__set-get-engine_fire_instruction-EQ-update-got_engine_fire_instruction_false",
                        "intent": null,
                        "assignments": {
                            "$server_status": "didnt-find"
                        }
                    }
                ]
            }
        },
        "get-electric_fire_instruction": {
            "type": "web_plan",
            "call": {
                "endpoint": "http://127.0.0.1:9000/create_plan",
                "default_payload": {
                    "id": 1,
                    "domain_file": "/home/qnc/upf-hierarchical/domain/domainfile.hddl",
                    "problem_file": "/home/qnc/upf-hierarchical/problem/electric_fire.hddl"
                }
            },
            "message_variants": [
                "Do I even need this?"
            ],
            "condition": [
                [
                    "ctx_three",
                    "Known"
                ],
                [
                    "ctx_three",
                    true
                ],
                [
                    "fire_type",
                    "Known"
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ],
                [
                    "fire_type-value-electric",
                    true
                ]
            ],
            "effect": {
                "global-outcome-name": "get-electric_fire_instruction__set-get-electric_fire_instruction",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "server_status": {
                                "value": true,
                                "variable": "server_status",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "got_instruction_electric_fire": {
                                "value": true,
                                "variable": "got_instruction_electric_fire",
                                "interpretation": "json"
                            }
                        },
                        "name": "get-electric_fire_instruction_DETDUP_get-electric_fire_instruction__set-get-electric_fire_instruction-EQ-update-got_electric_fire_instruction",
                        "intent": null,
                        "assignments": {
                            "$server_status": "found"
                        }
                    },
                    {
                        "updates": {
                            "server_status": {
                                "value": false,
                                "variable": "server_status",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "name": "get-electric_fire_instruction_DETDUP_get-electric_fire_instruction__set-get-electric_fire_instruction-EQ-update-got_electric_fire_instruction_false",
                        "intent": null,
                        "assignments": {
                            "$server_status": "found"
                        }
                    }
                ]
            }
        },
        "update-after_slot_fill_electric_fire": {
            "type": "system",
            "condition": [
                [
                    "instrument",
                    "Known"
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "update-after_slot_fill_electric_fire__update",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "ctx_three": {
                                "value": true,
                                "variable": "ctx_three",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "fire_type": {
                                "value": "electric",
                                "variable": "fire_type",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "fire_type-value-engine": {
                                "value": false,
                                "variable": "fire_type-value-engine",
                                "interpretation": "json"
                            },
                            "fire_type-value-electric": {
                                "value": true,
                                "variable": "fire_type-value-electric",
                                "interpretation": "json"
                            },
                            "fire_type-value-none": {
                                "value": false,
                                "variable": "fire_type-value-none",
                                "interpretation": "json"
                            }
                        },
                        "name": "update-after_slot_fill_electric_fire_DETDUP_update-after_slot_fill_electric_fire__update-EQ-update",
                        "intent": null,
                        "assignments": {
                            "$ctx_three": "found",
                            "$fire_type": "found"
                        }
                    }
                ]
            }
        },
        "final-context": {
            "type": "system",
            "subtype": "Context dependent determination",
            "condition": [
                [
                    "ctx_three",
                    true
                ],
                [
                    "ctx_three",
                    "Known"
                ],
                [
                    "fire_type",
                    "Known"
                ],
                [
                    "dummy_code",
                    "Unknown"
                ],
                [
                    "server_status",
                    "Known"
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "final-context__set-complete",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "dummy_code": {
                                "value": 300,
                                "variable": "dummy_code",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "context": {
                            "fire_type": {
                                "value": "electric"
                            },
                            "ctx_three": {
                                "value": true
                            },
                            "server_status": {
                                "value": true
                            }
                        },
                        "name": "final-context_DETDUP_final-context__set-complete-EQ-update-electric_fire",
                        "intent": null,
                        "assignments": {
                            "$dummy_code": "found"
                        }
                    },
                    {
                        "updates": {
                            "dummy_code": {
                                "value": 400,
                                "variable": "dummy_code",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "context": {
                            "fire_type": {
                                "value": "engine"
                            },
                            "ctx_three": {
                                "value": true
                            },
                            "server_status": {
                                "value": true
                            }
                        },
                        "name": "final-context_DETDUP_final-context__set-complete-EQ-update-engine_fire",
                        "intent": null,
                        "assignments": {
                            "$dummy_code": "found"
                        }
                    },
                    {
                        "updates": {
                            "dummy_code": {
                                "value": 400,
                                "variable": "dummy_code",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "context": {
                            "server_status": {
                                "value": false
                            }
                        },
                        "name": "final-context_DETDUP_final-context__set-complete-EQ-update-error",
                        "intent": null,
                        "assignments": {
                            "$dummy_code": "found"
                        }
                    }
                ]
            }
        },
        "get-need_further_help": {
            "type": "dialogue",
            "message_variants": [
                "Do you need any further help?"
            ],
            "condition": [
                [
                    "dummy_code",
                    "Known"
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-need_further_help__set-complete",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "need_further_help": {
                                "value": true,
                                "variable": "need_further_help",
                                "interpretation": "json"
                            }
                        },
                        "intent": "deny",
                        "name": "get-need_further_help_DETDUP_get-need_further_help__set-complete-EQ-update-need_further_help",
                        "assignments": {}
                    },
                    {
                        "updates": {
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-need_further_help_DETDUP_get-need_further_help__set-complete-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "deny": {
                    "entities": [],
                    "utterances": [
                        "no",
                        "nah",
                        "negative",
                        "not at all",
                        "not really"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "complete": {
            "type": "system",
            "condition": [
                [
                    "need_further_help",
                    true
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "complete__finish",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "goal": {
                                "value": true,
                                "variable": "goal",
                                "interpretation": "json"
                            }
                        },
                        "name": "complete_DETDUP_complete__finish-EQ-finish",
                        "intent": null,
                        "assignments": {}
                    }
                ]
            }
        },
        "dialogue_statement": {
            "type": "dialogue",
            "condition": [
                [
                    "force-statement",
                    true
                ]
            ],
            "effect": {
                "global-outcome-name": "dialogue_statement__reset",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "force-statement": {
                                "value": false,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "utter_msg",
                        "name": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "assignments": {}
                    }
                ]
            },
            "message_variants": [
                ""
            ],
            "disable-fallback": true,
            "intents": {
                "utter_msg": {
                    "entities": [],
                    "utterances": [],
                    "type": "regular"
                }
            }
        },
        "slot-filler__get-fire_color": {
            "type": "dialogue",
            "message_variants": [
                "What is the color the fire?"
            ],
            "condition": [
                [
                    "fire_color",
                    null
                ],
                [
                    "fire_color",
                    "Unknown"
                ],
                [
                    "request_engine_fire_help",
                    true
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "slot-filler__get-fire_color__validate-slot-fill",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "fire_color": {
                                "value": "$fire_color",
                                "variable": "fire_color",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-fire_color",
                        "response_variants": [
                            "Generating instructions for $fire_color colored fire"
                        ],
                        "name": "slot-filler__get-fire_color_DETDUP_slot-filler__get-fire_color__validate-slot-fill-EQ-fire_color_found",
                        "assignments": {
                            "$fire_color": "found"
                        }
                    },
                    {
                        "updates": {
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "slot-filler__get-fire_color_DETDUP_slot-filler__get-fire_color__validate-slot-fill-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-fire_color": {
                    "entities": [
                        "$fire_color"
                    ],
                    "utterances": [
                        "The hue I perceive matches $fire_color.",
                        "My sight captures the shade represented by $fire_color.",
                        "The tint I observe resembles $fire_color.",
                        "What meets my eyes mirrors $fire_color.",
                        "The pigment evident to me reflects $fire_color.",
                        "I discern a hue akin to $fire_color.",
                        "The color evident in my vision aligns with $fire_color.",
                        "What I perceive resembles the hue $fire_color.",
                        "My observation identifies the color as $fire_color.",
                        "The tone apparent to me resonates with $fire_color."
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "slot-filler__get-instrument_on_fire": {
            "type": "dialogue",
            "message_variants": [
                "Which instrument is burning?"
            ],
            "condition": [
                [
                    "instrument",
                    null
                ],
                [
                    "instrument",
                    "Unknown"
                ],
                [
                    "request_electric_fire_help",
                    true
                ],
                [
                    "force-statement",
                    false
                ],
                [
                    "forcing__get-restart_conversation",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "slot-filler__get-instrument_on_fire__validate-slot-fill",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "instrument": {
                                "value": "$instrument",
                                "variable": "instrument",
                                "certainty": "Known",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-instrument",
                        "response_variants": [
                            "Generating instructions for the case when is $fire_color colored burning."
                        ],
                        "name": "slot-filler__get-instrument_on_fire_DETDUP_slot-filler__get-instrument_on_fire__validate-slot-fill-EQ-instrument_found",
                        "assignments": {
                            "$instrument": "found"
                        }
                    },
                    {
                        "updates": {
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "slot-filler__get-instrument_on_fire_DETDUP_slot-filler__get-instrument_on_fire__validate-slot-fill-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-instrument": {
                    "entities": [
                        "$instrument"
                    ],
                    "utterances": [
                        "My suspicion leans towards the $instrument.",
                        "I believe the $instrument is the culprit.",
                        "I reckon it's the $instrument at fault.",
                        "My intuition points towards the $instrument.",
                        "I suspect the $instrument is involved.",
                        "I have a feeling that the $instrument is to blame.",
                        "It seems likely that the $instrument is responsible.",
                        "The $instrument appears to be the source.",
                        "Signs suggest that the $instrument is involved.",
                        "It looks like the $instrument is causing the issue"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        }
    }
}